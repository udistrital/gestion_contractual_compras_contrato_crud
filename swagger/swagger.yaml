openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_healthCheck
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - App
  /contratos-generales:
    get:
      operationId: ContratoGeneralController_findAll
      parameters:
        - name: fields
          required: false
          in: query
          description: Campos a incluir en la respuesta (separados por comas)
          schema:
            type: string
        - name: sortBy
          required: false
          in: query
          description: Campo por el cual ordenar
          schema:
            type: string
        - name: orderBy
          required: false
          in: query
          description: Dirección del ordenamiento (ASC o DESC)
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: limit
          required: false
          in: query
          description: Número máximo de registros a retornar
          schema:
            minimum: 0
            type: number
        - name: offset
          required: false
          in: query
          description: Número de registros a saltar
          schema:
            minimum: 0
            type: number
        - name: query
          required: false
          in: query
          description: >-
            Filtros en formato JSON. Puede incluir filtros para campos de
            relaciones usando notación punto. Ejemplo:
            {"estados.estado_parametro_id":1,"solicitante.dependencia_solicitante_id":101}
          schema:
            type: string
        - name: include
          required: false
          in: query
          description: >-
            Relaciones a incluir (separadas por comas). Ejemplo:
            estados,solicitante,lugarEjecucion
          schema:
            example: estados,contratista
            type: string
      responses:
        '200':
          description: Lista de contratos generales
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContratoGeneral'
      summary: Obtener todos los contratos generales
      tags: &ref_0
        - contratos-generales
    post:
      operationId: ContratoGeneralController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrearContratoGeneralDto'
      responses:
        '201':
          description: Contrato general creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContratoGeneral'
      summary: Crear un nuevo contrato general
      tags: *ref_0
  /contratos-generales/{id}:
    get:
      operationId: ContratoGeneralController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID del contrato general
          schema:
            type: number
        - name: fields
          required: false
          in: query
          description: Campos a retornar (separados por comas)
          schema:
            type: string
        - name: sortBy
          required: false
          in: query
          description: Campo por el cual ordenar
          schema:
            type: string
        - name: orderBy
          required: false
          in: query
          description: Dirección del ordenamiento
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: limit
          required: false
          in: query
          description: Número de registros a retornar
          schema:
            minimum: 0
            type: number
        - name: offset
          required: false
          in: query
          description: Número de registros a saltar
          schema:
            minimum: 0
            type: number
        - name: query
          required: false
          in: query
          description: Filtros dinámicos en formato JSON
          schema:
            type: string
        - name: include
          required: false
          in: query
          description: >-
            Relaciones a incluir (separadas por comas). Ejemplo:
            estados,contratista
          schema:
            example: estados,contratista
            type: string
      responses:
        '200':
          description: Contrato general encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContratoGeneral'
        '404':
          description: Contrato general no encontrado
      summary: Obtener un contrato general por ID
      tags: *ref_0
    put:
      operationId: ContratoGeneralController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID del contrato general a actualizar
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarContratoGeneralDto'
      responses:
        '200':
          description: Contrato general actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContratoGeneral'
        '404':
          description: Contrato general no encontrado
      summary: Actualizar un contrato general
      tags: *ref_0
    delete:
      operationId: ContratoGeneralController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: ID del contrato general a eliminar
          schema:
            type: number
      responses:
        '200':
          description: Contrato general eliminado
        '404':
          description: Contrato general no encontrado
      summary: Eliminar un contrato general
      tags: *ref_0
  /documentos-contratos:
    post:
      operationId: DocumentoContratoController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentoContratoDto'
      responses:
        '201':
          description: El documento contrato ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentoContrato'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo documento contrato
      tags: &ref_1
        - documentos-contratos
    get:
      operationId: DocumentoContratoController_findAll
      parameters: []
      responses:
        '200':
          description: Devuelve todos los documentos contratos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentoContrato'
      summary: Obtener todos los documentos contratos
      tags: *ref_1
  /documentos-contratos/{id}:
    get:
      operationId: DocumentoContratoController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el documento contrato.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentoContrato'
        '404':
          description: Documento contrato no encontrado.
      summary: Obtener un documento contrato por id
      tags: *ref_1
    patch:
      operationId: DocumentoContratoController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentoContratoDto'
      responses:
        '200':
          description: El documento contrato ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentoContrato'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: Documento contrato no encontrado.
      summary: Actualizar un documento contrato
      tags: *ref_1
    delete:
      operationId: DocumentoContratoController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: El documento contrato ha sido eliminado exitosamente.
        '404':
          description: Documento contrato no encontrado.
      summary: Eliminar un documento contrato
      tags: *ref_1
  /documentos-contratos/contrato/{contratoId}:
    get:
      operationId: DocumentoContratoController_findByContratoId
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve los documentos contratos para el contrato especificado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentoContrato'
        '404':
          description: >-
            No se encontraron documentos contratos para el contrato
            especificado.
      summary: Obtener documentos contratos por id de contrato
      tags: *ref_1
  /contratistas:
    post:
      operationId: ContratistaController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContratistaDto'
      responses:
        '201':
          description: El contratista ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contratista'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo contratista
      tags: &ref_2
        - contratistas
    get:
      operationId: ContratistaController_findAll
      parameters: []
      responses:
        '200':
          description: Devuelve todos los contratistas.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contratista'
      summary: Obtener todos los contratistas
      tags: *ref_2
  /contratistas/{id}:
    get:
      operationId: ContratistaController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el contratista.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contratista'
        '404':
          description: Contratista no encontrado.
      summary: Obtener un contratista por numero_identificacion
      tags: *ref_2
    patch:
      operationId: ContratistaController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContratistaDto'
      responses:
        '200':
          description: El contratista ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contratista'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: Contratista no encontrado.
      summary: Actualizar un contratista
      tags: *ref_2
    delete:
      operationId: ContratistaController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: El contratista ha sido eliminado exitosamente.
        '404':
          description: Contratista no encontrado.
      summary: Eliminar un contratista
      tags: *ref_2
  /contratistas/contrato/{contratoId}:
    get:
      operationId: ContratistaController_findByContrato
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el contratista para el contrato especificado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contratista'
        '404':
          description: No se encontró contratista para el contrato especificado.
      summary: Obtener contratista por id de contrato
      tags: *ref_2
  /estados-contrato:
    post:
      operationId: EstadoContratoController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstadoContratoDto'
      responses:
        '201':
          description: El estado de contrato ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstadoContrato'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo estado de contrato
      tags: &ref_3
        - estados-contrato
    get:
      operationId: EstadoContratoController_findAll
      parameters:
        - name: fields
          required: false
          in: query
          description: Campos a retornar (separados por comas)
          schema:
            type: string
        - name: sortBy
          required: false
          in: query
          description: Campo por el cual ordenar
          schema:
            type: string
        - name: orderBy
          required: false
          in: query
          description: Dirección del ordenamiento
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: limit
          required: false
          in: query
          description: Número de registros a retornar
          schema:
            minimum: 0
            type: number
        - name: offset
          required: false
          in: query
          description: Número de registros a saltar
          schema:
            minimum: 0
            type: number
        - name: query
          required: false
          in: query
          description: Filtros dinámicos en formato JSON
          schema:
            type: string
        - name: include
          required: false
          in: query
          description: Relaciones a Incliur (separadas por comas)
          schema:
            example: estados,contratista
            type: string
      responses:
        '200':
          description: Devuelve todos los estados de contrato.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstadoContrato'
      summary: Obtener todos los estados de contrato
      tags: *ref_3
  /estados-contrato/{id}:
    get:
      operationId: EstadoContratoController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el estado de contrato.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstadoContrato'
        '404':
          description: Estado de contrato no encontrado.
      summary: Obtener un estado de contrato por id
      tags: *ref_3
    patch:
      operationId: EstadoContratoController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEstadoContratoDto'
      responses:
        '200':
          description: El estado de contrato ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstadoContrato'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: Estado de contrato no encontrado.
      summary: Actualizar un estado de contrato
      tags: *ref_3
    delete:
      operationId: EstadoContratoController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: El estado de contrato ha sido eliminado exitosamente.
        '404':
          description: Estado de contrato no encontrado.
      summary: Eliminar un estado de contrato
      tags: *ref_3
  /estados-contrato/contrato/{contratoId}:
    get:
      operationId: EstadoContratoController_findByContratoGeneral
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve los estados de contrato para el contrato especificado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstadoContrato'
        '404':
          description: No se encontraron estados de contrato para el contrato especificado.
      summary: Obtener estados de contrato por id de contrato
      tags: *ref_3
  /estados-contrato/contrato/{contratoId}/actual:
    get:
      operationId: EstadoContratoController_findCurrentEstado
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el estado actual del contrato especificado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstadoContrato'
        '404':
          description: No se encontró estado actual para el contrato especificado.
      summary: Obtener el estado actual de un contrato
      tags: *ref_3
  /lugares-ejecucion:
    post:
      operationId: LugarEjecucionController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLugarEjecucionDto'
      responses:
        '201':
          description: El lugar de ejecución ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LugarEjecucion'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo lugar de ejecución
      tags: &ref_4
        - lugares-ejecucion
    get:
      operationId: LugarEjecucionController_findAll
      parameters: []
      responses:
        '200':
          description: Devuelve todos los lugares de ejecución.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LugarEjecucion'
      summary: Obtener todos los lugares de ejecución
      tags: *ref_4
  /lugares-ejecucion/{id}:
    get:
      operationId: LugarEjecucionController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el lugar de ejecución.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LugarEjecucion'
        '404':
          description: Lugar de ejecución no encontrado.
      summary: Obtener un lugar de ejecución por id
      tags: *ref_4
    patch:
      operationId: LugarEjecucionController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLugarEjecucionDto'
      responses:
        '200':
          description: El lugar de ejecución ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LugarEjecucion'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: Lugar de ejecución no encontrado.
      summary: Actualizar un lugar de ejecución
      tags: *ref_4
    delete:
      operationId: LugarEjecucionController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: El lugar de ejecución ha sido eliminado exitosamente.
        '404':
          description: Lugar de ejecución no encontrado.
      summary: Eliminar un lugar de ejecución
      tags: *ref_4
  /lugares-ejecucion/contrato/{contratoId}:
    get:
      operationId: LugarEjecucionController_findByContratoGeneralId
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve los lugares de ejecución para el contrato especificado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LugarEjecucion'
        '404':
          description: >-
            No se encontraron lugares de ejecución para el contrato
            especificado.
      summary: Obtiene el lugar de ejecución por id de contrato
      tags: *ref_4
  /cdp:
    post:
      operationId: CdpController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCdpDto'
      responses:
        '201':
          description: El CDP ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cdp'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo CDP
      tags: &ref_5
        - cdp
    get:
      operationId: CdpController_findAll
      parameters: []
      responses:
        '200':
          description: Devuelve todos los CDPs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cdp'
      summary: Obtener todos los CDPs
      tags: *ref_5
  /cdp/{id}:
    get:
      operationId: CdpController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Devuelve el CDP encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cdp'
        '404':
          description: CDP no encontrado.
      summary: Obtener un CDP por ID
      tags: *ref_5
    patch:
      operationId: CdpController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCdpDto'
      responses:
        '200':
          description: El CDP ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cdp'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: CDP no encontrado.
      summary: Actualizar un CDP
      tags: *ref_5
    delete:
      operationId: CdpController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: El CDP ha sido eliminado exitosamente.
        '404':
          description: CDP no encontrado.
      summary: Eliminar un CDP
      tags: *ref_5
  /cdp/contrato/{contratoId}:
    get:
      operationId: CdpController_findByContrato
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Devuelve los CDPs para el contrato especificado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cdp'
        '404':
          description: No se encontraron CDPs para el contrato especificado.
      summary: Obtener CDPs por ID de contrato
      tags: *ref_5
  /especificaciones-tecnicas:
    get:
      operationId: EspecificacionTecnicaController_findAll
      parameters:
        - name: fields
          required: false
          in: query
          description: Campos a retornar (separados por comas)
          schema:
            type: string
        - name: sortBy
          required: false
          in: query
          description: Campo por el cual ordenar
          schema:
            type: string
        - name: orderBy
          required: false
          in: query
          description: Dirección del ordenamiento
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: limit
          required: false
          in: query
          description: Número de registros a retornar
          schema:
            minimum: 0
            type: number
        - name: offset
          required: false
          in: query
          description: Número de registros a saltar
          schema:
            minimum: 0
            type: number
        - name: query
          required: false
          in: query
          description: Filtros dinámicos en formato JSON
          schema:
            type: string
        - name: include
          required: false
          in: query
          description: Relaciones a Incliur (separadas por comas)
          schema:
            example: estados,contratista
            type: string
      responses:
        '200':
          description: Lista de especificaciones técnicas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EspecificacionTecnica'
      summary: Obtener todas las especificaciones técnicas
      tags: &ref_6
        - especificaciones-tecnicas
    post:
      operationId: EspecificacionTecnicaController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrearEspecificacionTecnicaDto'
      responses:
        '201':
          description: Especificación técnica creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EspecificacionTecnica'
      summary: Crear una nueva especificación técnica
      tags: *ref_6
  /especificaciones-tecnicas/{id}:
    get:
      operationId: EspecificacionTecnicaController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID de la especificación técnica
          schema:
            type: number
      responses:
        '200':
          description: Especificación técnica encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EspecificacionTecnica'
        '404':
          description: Especificación técnica no encontrada
      summary: Obtener una especificación técnica por ID
      tags: *ref_6
    put:
      operationId: EspecificacionTecnicaController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID de la especificación técnica a actualizar
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarEspecificacionTecnicaDto'
      responses:
        '200':
          description: Especificación técnica actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EspecificacionTecnica'
        '404':
          description: Especificación técnica no encontrada
      summary: Actualizar una especificación técnica
      tags: *ref_6
    delete:
      operationId: EspecificacionTecnicaController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      summary: Marcar una especificación técnica como inactiva
      tags: *ref_6
  /actas-inicio:
    get:
      operationId: ActaInicioController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Obtener todas las actas de inicio
      tags: &ref_7
        - actas-inicio
    post:
      operationId: ActaInicioController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrearActaInicioDto'
      responses:
        '201':
          description: ''
      summary: Crear una nueva acta de inicio
      tags: *ref_7
  /actas-inicio/{id}:
    get:
      operationId: ActaInicioController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Obtener una acta de inicio por ID
      tags: *ref_7
    put:
      operationId: ActaInicioController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarActaInicioDto'
      responses:
        '200':
          description: ''
      summary: Actualizar una acta de inicio
      tags: *ref_7
    delete:
      operationId: ActaInicioController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Eliminar una acta de inicio
      tags: *ref_7
  /solicitantes:
    post:
      operationId: SolicitanteController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolicitanteDto'
      responses:
        '201':
          description: El Solicitante ha sido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitanteEntity'
        '400':
          description: Solicitud incorrecta.
      summary: Crear un nuevo lugar de ejecución
      tags: &ref_8
        - solicitantes
    get:
      operationId: SolicitanteController_findAll
      parameters: []
      responses:
        '200':
          description: Devuelve todos los solicitantes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolicitanteEntity'
      summary: Obtener todos los lugares de ejecución
      tags: *ref_8
  /solicitantes/{id}:
    get:
      operationId: SolicitanteController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve el solicitante especificado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitanteEntity'
        '404':
          description: Lugar de ejecución no encontrado.
      summary: Obtener un lugar de ejecución por id
      tags: *ref_8
    patch:
      operationId: SolicitanteController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolicitanteDto'
      responses:
        '200':
          description: El solicitante ha sido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitanteEntity'
        '400':
          description: Solicitud incorrecta.
        '404':
          description: Solictante no encontrado.
      summary: Actualizar un lugar de ejecución
      tags: *ref_8
    delete:
      operationId: SolicitanteController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: El lugar de ejecución ha sido eliminado exitosamente.
        '404':
          description: Lugar de ejecución no encontrado.
      summary: Eliminar un lugar de ejecución
      tags: *ref_8
  /solicitantes/contrato/{contratoId}:
    get:
      operationId: SolicitanteController_findByContratoGeneralId
      parameters:
        - name: contratoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Devuelve los lugares de ejecución para el contrato especificado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolicitanteEntity'
        '404':
          description: >-
            No se encontraron lugares de ejecución para el contrato
            especificado.
      summary: Obtiene el lugar de ejecución por id de contrato
      tags: *ref_8
  /ordenador-contrato:
    get:
      operationId: OrdenadorContratoController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Obtener todos los ordenadores
      tags: &ref_9
        - ordenadores-contrato
    post:
      operationId: OrdenadorContratoController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrdenadorContratoDto'
      responses:
        '201':
          description: ''
      summary: Crear un nuevo ordenador
      tags: *ref_9
  /ordenador-contrato/{id}:
    get:
      operationId: OrdenadorContratoController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Obtener un ordenador por ID
      tags: *ref_9
    put:
      operationId: OrdenadorContratoController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrdenadorContratoDto'
      responses:
        '200':
          description: ''
      summary: Actualizar un ordenador
      tags: *ref_9
    delete:
      operationId: OrdenadorContratoController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Eliminar un ordenador
      tags: *ref_9
info:
  title: Gestion Contractual CRUD
  description: API para la gestión contractual
  version: '1.0'
  contact: {}
tags:
  - name: gestion-contractual
    description: ''
servers: []
components:
  schemas:
    ContratoGeneral:
      type: object
      properties: {}
    CrearContratoGeneralDto:
      type: object
      properties:
        tipoCompromisoId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Tipo Compromiso. 1. Convenio. 2. Contrato 3.
            Orden
        tipoContratoId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Tipo Contrato. 1. Orden de Servicio, 2. Orden de
            Compra
        perfilContratistaId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Perfil Contratista. 1. Asistencial, 2. Técnico,
            3. Profesional, 4. Especializado, ...
        aplicaPoliza:
          type: boolean
          example: true
          description: Aplica Poliza
        modalidadSeleccionId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Modalidad Selección. 1. Licitación Pública, 2.
            Selección Abreviada, ...
        tipologiaEspecificaId:
          type: number
          example: 30
          description: >-
            Id Parámetros CRUD: Tipología Específica. 30. Servicios de
            Mantenimiento y Reparación, ...
        regimenContratacionId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Regimen Contratación. 1. Ley 80, 2. Régimen
            Privado, 3. Convenio Ley 489, ...
        procedimientoId:
          type: number
          example: 1
          description: >-
            Id Parámetros CRUD: Procedimiento. 1. Subasta Inversa, 2. Mínima
            Cuantía, 3. Concurso de Méritos ...
        plazoEjecucion:
          type: number
          example: 30
          description: Cantidad de días, meses o años para la ejecución del contrato
        unidadEjecutoraId:
          type: number
          example: 1
          description: 'Id Parámetros CRUD: Unidad de Tiempo. 1. Días, 2. Meses, 3. Años'
      required:
        - tipoCompromisoId
        - tipoContratoId
        - perfilContratistaId
        - aplicaPoliza
        - modalidadSeleccionId
        - tipologiaEspecificaId
        - regimenContratacionId
        - procedimientoId
        - plazoEjecucion
        - unidadEjecutoraId
    ActualizarContratoGeneralDto:
      type: object
      properties: {}
    CreateDocumentoContratoDto:
      type: object
      properties:
        documento_id:
          type: number
          example: 1
          description: Documento ID - Gestor Documental
        contrato_general_id:
          type: number
          example: 1
          description: ID Contrato General Asociado
        documento_enlace:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Enlace al documento
        tipo_documento_id:
          type: number
          example: 1
          description: ID Tipo Documento - Parámetros CRUD
      required:
        - documento_id
        - contrato_general_id
        - documento_enlace
    DocumentoContrato:
      type: object
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Identificador único del documento
        tipo_documento_id:
          type: number
          example: 1
          description: ID Tipo Documento - Parámetros CRUD
        documento_enlace:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Enlace al documento
        documento_id:
          type: number
          example: 1
          description: Documento ID - Gestor Documental
      required:
        - id
        - documento_id
    UpdateDocumentoContratoDto:
      type: object
      properties:
        documento_id:
          type: number
          example: 1
          description: Documento ID - Gestor Documental
        contrato_general_id:
          type: number
          example: 1
          description: ID Contrato General Asociado
        documento_enlace:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Enlace al documento
        tipo_documento_id:
          type: number
          example: 1
          description: ID Tipo Documento - Parámetros CRUD
    CreateContratistaDto:
      type: object
      properties:
        numero_documento:
          type: string
          description: Número de documento del contratista
          example: '1234'
        tipo_persona_id:
          type: number
          description: ID del tipo de persona del contratista
          example: 1
        contrato_general_id:
          type: number
          description: Contrato asociado al contratista
          example: 1
      required:
        - numero_documento
        - tipo_persona_id
        - contrato_general_id
    Contratista:
      type: object
      properties: {}
    UpdateContratistaDto:
      type: object
      properties:
        numero_documento:
          type: string
          description: Número de documento del contratista
          example: '1234'
        tipo_persona_id:
          type: number
          description: ID del tipo de persona del contratista
          example: 1
        contrato_general_id:
          type: number
          description: Contrato asociado al contratista
          example: 1
    CreateEstadoContratoDto:
      type: object
      properties: {}
    EstadoContrato:
      type: object
      properties: {}
    UpdateEstadoContratoDto:
      type: object
      properties: {}
    CreateLugarEjecucionDto:
      type: object
      properties: {}
    LugarEjecucion:
      type: object
      properties: {}
    UpdateLugarEjecucionDto:
      type: object
      properties: {}
    CreateCdpDto:
      type: object
      properties:
        numero_cdp_id:
          type: number
          description: Número identificador del CDP
          example: 1001
        fecha_registro:
          format: date-time
          type: string
          description: Fecha de registro del CDP
          example: '2023-01-15'
        vigencia_cdp:
          type: number
          description: Año de vigencia del CDP
          example: 2023
        contrato_general_id:
          type: number
          description: ID del contrato general asociado
          example: 1
        activo:
          type: boolean
          description: Estado activo del CDP
          example: true
      required:
        - numero_cdp_id
        - fecha_registro
        - vigencia_cdp
        - contrato_general_id
        - activo
    Cdp:
      type: object
      properties: {}
    UpdateCdpDto:
      type: object
      properties:
        numero_cdp_id:
          type: number
          description: Número identificador del CDP
          example: 1001
        fecha_registro:
          format: date-time
          type: string
          description: Fecha de registro del CDP
          example: '2023-01-15'
        vigencia_cdp:
          type: number
          description: Año de vigencia del CDP
          example: 2023
        contrato_general_id:
          type: number
          description: ID del contrato general asociado
          example: 1
        activo:
          type: boolean
          description: Estado activo del CDP
          example: true
    EspecificacionTecnica:
      type: object
      properties: {}
    CrearEspecificacionTecnicaDto:
      type: object
      properties:
        descripcion:
          type: string
          example: '1'
          description: Identificador del ítem en la especificación técnica
        cantidad:
          type: number
          example: 10
          description: Cantidad del ítem
        valorUnitario:
          type: number
          example: 100
          description: Valor unitario del ítem
        valorTotal:
          type: number
          example: 1000
          description: Valor total del ítem (cantidad * valorUnitario)
        contratoGeneralId:
          type: number
          example: 2
          description: ID del contrato general relacionado
        activo:
          type: boolean
          example: true
          description: Indica si el registro está activo o no
        fechaCreacion:
          format: date-time
          type: string
          example: '2024-01-04T00:00:00Z'
          description: Fecha de creación del registro
        fechaModificacion:
          format: date-time
          type: string
          example: '2024-01-04T00:00:00Z'
          description: Fecha de última modificación del registro
      required:
        - descripcion
        - cantidad
        - valorUnitario
        - valorTotal
        - contratoGeneralId
        - activo
        - fechaCreacion
        - fechaModificacion
    ActualizarEspecificacionTecnicaDto:
      type: object
      properties: {}
    CrearActaInicioDto:
      type: object
      properties:
        usuario_id:
          type: number
          example: 1
          description: Id del usuario que creó el acta
        usuario_legado:
          type: string
          example: usuario_legado
          description: Usuario heredado del sistema anterior
        descripcion:
          type: string
          example: Descripción del acta
          description: Descripción breve del acta
        fecha_inicio:
          type: string
          example: '2023-10-24'
          description: Fecha de inicio del acta (formato ISO)
        fecha_fin:
          type: string
          example: '2023-11-24'
          description: Fecha de finalización del acta (formato ISO)
        contrato_general_id:
          type: number
          example: 1
          description: Id del contrato general relacionado
        activo:
          type: boolean
          example: true
          description: Indica si el acta está activa
      required:
        - usuario_id
        - usuario_legado
        - descripcion
        - fecha_inicio
        - fecha_fin
        - contrato_general_id
        - activo
    ActualizarActaInicioDto:
      type: object
      properties:
        usuario_id:
          type: number
          example: 1
          description: Id del usuario que creó el acta
        usuario_legado:
          type: string
          example: usuario_legado
          description: Usuario heredado del sistema anterior
        descripcion:
          type: string
          example: Descripción del acta
          description: Descripción breve del acta
        fecha_inicio:
          type: string
          example: '2023-10-24'
          description: Fecha de inicio del acta (formato ISO)
        fecha_fin:
          type: string
          example: '2023-11-24'
          description: Fecha de finalización del acta (formato ISO)
        contrato_general_id:
          type: number
          example: 1
          description: Id del contrato general relacionado
        activo:
          type: boolean
          example: true
          description: Indica si el acta está activa
    CreateSolicitanteDto:
      type: object
      properties: {}
    SolicitanteEntity:
      type: object
      properties: {}
    UpdateSolicitanteDto:
      type: object
      properties: {}
    CreateOrdenadorContratoDto:
      type: object
      properties:
        terceroId:
          type: number
        ordenadorArgoId:
          type: number
        ordenadorSikarcaId:
          type: number
        resolucion:
          type: string
        documentoIdentidad:
          type: string
        cargoId:
          type: number
        contrato_general_id:
          type: number
      required:
        - terceroId
        - ordenadorArgoId
        - ordenadorSikarcaId
        - resolucion
        - documentoIdentidad
        - cargoId
        - contrato_general_id
    UpdateOrdenadorContratoDto:
      type: object
      properties:
        terceroId:
          type: number
        ordenadorArgoId:
          type: number
        ordenadorSikarcaId:
          type: number
        resolucion:
          type: string
        documentoIdentidad:
          type: string
        cargoId:
          type: number
        contrato_general_id:
          type: number
